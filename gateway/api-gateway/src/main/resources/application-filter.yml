#https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-addrequestparameter-gatewayfilter-factory


#给请求添加参数的过滤器:配置会对GET请求添加username=xm的请求参数
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: add_request_parameter_route
#          uri: ${service-url.user-service}
#          filters:
#            - AddRequestParameter=username, xm
#          predicates:
#            - Method=GET


#对指定数量的路径前缀进行去除的过滤器
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: strip_prefix_route
#          uri: ${service-url.user-service}
#          predicates:
#            - Path=/a/user/**
#          filters:
#            - StripPrefix=1


#路径前增加
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: prefix_path_route
#          uri: ${service-url.user-service}
#          filters:
#            - PrefixPath=/user
#          predicates:
#            - Method=GET


#服务降级
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: hystrix_route
#          uri: ${service-url.user-service}
#          predicates:
#            - Method=GET
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: myCircuitBreaker
#                fallbackUri: forward:/fallback   #降级接口



#限流
#spring:
#  redis:
#    host: localhost
#    port: 6379
#  cloud:
#    gateway:
#      routes:
#        - id: requestratelimiter_route
#          uri: ${service-url.user-service}
#          filters:
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1 #每秒允许处理的请求数量
#                redis-rate-limiter.burstCapacity: 2 #每秒最大处理的请求数量
#                redis-rate-limiter.requestedTokens: 1 # 每个请求花费几个令牌
#                key-resolver: "#{@ipKeyResolver}" #限流策略，对应策略的Bean
#          predicates:
#            - Method=GET




#失败重试
#spring:
#  cloud:
#    gateway:
#      routes:
#        - id: retry_route
#          uri: ${service-url.user-service}
#          predicates:
#            - Method=GET
#          filters:
#            - name: Retry
#              args:
#                retries: 1 #需要进行重试的次数
#                statuses: BAD_GATEWAY #返回哪个状态码需要进行重试，返回状态码为5XX进行重试
#                backoff:
#                  firstBackoff: 10ms
#                  maxBackoff: 50ms
#                  factor: 2
#                  basedOnPreviousValue: false
